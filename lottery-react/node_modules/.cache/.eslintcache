[{"/Users/altantutar/Desktop/lottery-react/src/index.js":"1","/Users/altantutar/Desktop/lottery-react/src/App.js":"2","/Users/altantutar/Desktop/lottery-react/src/reportWebVitals.js":"3","/Users/altantutar/Desktop/lottery-react/src/web3.js":"4","/Users/altantutar/Desktop/lottery-react/src/lottery.js":"5"},{"size":500,"mtime":1642931510475,"results":"6","hashOfConfig":"7"},{"size":2709,"mtime":1642962232901,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1642931510476,"results":"9","hashOfConfig":"7"},{"size":242,"mtime":1642933692220,"results":"10","hashOfConfig":"7"},{"size":1424,"mtime":1642951204760,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"dbhjdc",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/altantutar/Desktop/lottery-react/src/index.js",[],["24","25"],"/Users/altantutar/Desktop/lottery-react/src/App.js",["26"],"import React, { Component } from 'react'; //different\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends Component {\n\n  state = {\n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: ''\n  };\n  \n  async componentDidMount() {\n    // Runs after the first render() lifecycle\n    // Return the manager of the contract\n    const manager = await lottery.methods.manager().call();\n    // Return the player of the contract\n    const players = await lottery.methods.getPlayers().call();\n    // Return the balance of the contract\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n\n    this.setState({\n      manager, players, balance\n    });\n\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    // Get the accounts associated with this metamask\n    const accounts = await web3.eth.getAccounts();\n\n    // Set the message to wait on the transaction success\n    this.setState({message: \"Waiting on transaction success...\"});\n\n    // Send the transactions across the network to enter the lottery \n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({message: \"You have been entered to the lottery!\"});\n  }\n\n  onClick = async (event) => {\n    event.preventDefault();\n\n    // Set the message to wait on the transaction successs\n    this.setState({message: \"Waiting on transaction success...\"});\n\n    // Get the accounts associated with this metamask\n    const accounts = await web3.eth.getAccounts();\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    })\n    \n    // Declare that a winner has been win\n    this.setState({message: \"A winner has been picked!\"})\n  }\n\n  render() {\n    return ( \n      <div>\n        <h2> Lottery Contract </h2>\n        <p> This contract is managed by {this.state.manager}. There are currently {this.state.players.length} people entered, competing to win {web3.utils.fromWei(this.state.balance)} ether. \n        </p>\n\n        <hr/>\n        <form onSubmit={this.onSubmit}>\n          <h4> Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input \n            value = {this.state.value}\n            onChange={event => {\n              this.setState({value: event.target.value})\n            }}></input>\n          </div>\n          <button>Enter</button>\n        </form>\n        <hr/>\n\n        <h4> Ready to pick a winner? </h4>\n        <button onClick={this.onClick}>Pick a winner!</button>\n\n        <h1>{this.state.message}</h1>\n\n      </div>\n      );\n    }\n}\n\nexport default App;","/Users/altantutar/Desktop/lottery-react/src/reportWebVitals.js",[],"/Users/altantutar/Desktop/lottery-react/src/web3.js",[],"/Users/altantutar/Desktop/lottery-react/src/lottery.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":12},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]