{"ast":null,"code":"var _jsxFileName = \"/Users/altantutar/Desktop/lottery-react/src/App.js\";\nimport React, { Component } from 'react'; //different\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      manager: '',\n      players: [],\n      balance: '',\n      value: '',\n      message: ''\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault(); // Get the accounts associated with this metamask\n\n      const accounts = await web3.eth.getAccounts(); // Set the message to wait on the transaction success\n\n      this.setState({\n        message: \"Waiting on transaction success...\"\n      }); // Send the transactions across the network to enter the lottery \n\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        message: \"You have been entered to the lottery!\"\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // Runs after the first render() lifecycle\n    // Return the manager of the contract\n    const manager = await lottery.methods.manager().call(); // Return the player of the contract\n\n    const players = await lottery.methods.getPlayers().call(); // Return the balance of the contract\n\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({\n      manager,\n      players,\n      balance\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Lottery Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" This contract is managed by \", this.state.manager, \". There are currently \", this.state.players.length, \" people entered, competing to win \", web3.utils.fromWei(this.state.balance), \" ether.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount of ether to enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => {\n              this.setState({\n                value: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/altantutar/Desktop/lottery-react/src/App.js"],"names":["React","Component","web3","lottery","App","state","manager","players","balance","value","message","onSubmit","event","preventDefault","accounts","eth","getAccounts","setState","methods","enter","send","from","utils","toWei","componentDidMount","call","getPlayers","getBalance","options","address","render","length","fromWei","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; //different\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends Component {\n\n  state = {\n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: ''\n  };\n  \n  async componentDidMount() {\n    // Runs after the first render() lifecycle\n    // Return the manager of the contract\n    const manager = await lottery.methods.manager().call();\n    // Return the player of the contract\n    const players = await lottery.methods.getPlayers().call();\n    // Return the balance of the contract\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n\n    this.setState({\n      manager, players, balance\n    });\n\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    // Get the accounts associated with this metamask\n    const accounts = await web3.eth.getAccounts();\n\n    // Set the message to wait on the transaction success\n    this.setState({message: \"Waiting on transaction success...\"})\n\n    // Send the transactions across the network to enter the lottery \n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({message: \"You have been entered to the lottery!\"});\n  }\n\n  render() {\n    return ( \n      <div>\n        <h2> Lottery Contract </h2>\n        <p> This contract is managed by {this.state.manager}. There are currently {this.state.players.length} people entered, competing to win {web3.utils.fromWei(this.state.balance)} ether. \n        </p>\n\n        <hr/>\n        <form onSubmit={this.onSubmit}>\n          <h4> Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input \n            value = {this.state.value}\n            onChange={event => {\n              this.setState({value: event.target.value})\n            }}></input>\n          </div>\n          <button>Enter</button>\n        </form>\n      </div>\n      );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}